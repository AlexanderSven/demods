<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>